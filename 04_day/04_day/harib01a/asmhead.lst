     1                                  ; haribote-os boot asm
     2                                  ; TAB=4
     3                                  
     4                                  BOTPAK	EQU		0x00280000		; bootpackのロード先
     5                                  DSKCAC	EQU		0x00100000		; ディスクキャッシュの場所
     6                                  DSKCAC0	EQU		0x00008000		; ディスクキャッシュの場所（リアルモード）
     7                                  
     8                                  ; BOOT_INFO関係
     9                                  CYLS	EQU		0x0ff0			; ブートセクタが設定する
    10                                  LEDS	EQU		0x0ff1
    11                                  VMODE	EQU		0x0ff2			; 色数に関する情報。何ビットカラーか？
    12                                  SCRNX	EQU		0x0ff4			; 解像度のX
    13                                  SCRNY	EQU		0x0ff6			; 解像度のY
    14                                  VRAM	EQU		0x0ff8			; グラフィックバッファの開始番地
    15                                  
    16                                  		ORG		0xc200			; このプログラムがどこに読み込まれるのか
    17                                  
    18                                  ; 画面モードを設定
    19                                  
    20                                  ;		MOV		WORD [0x0ff2], 0x000c	; 進み具合テスト1
    21 00000000 C606F10F0A              		MOV             BYTE [0x0ff1],0x0a      ; 進捗チェック用フラグ
    22                                  
    23 00000005 B013                    		MOV		AL,0x13			; VGAグラフィックス、320x200x8bitカラー
    24 00000007 B400                    		MOV		AH,0x00
    25 00000009 CD10                    		INT		0x10
    26                                  ;		MOV		BYTE [VMODE],8	; 画面モードをメモする（C言語が参照する）
    27 0000000B C706F20F0800            		MOV		WORD [VMODE],8	; 画面モードをメモする（C言語が参照する）
    28 00000011 C706F40F4001            		MOV		WORD [SCRNX],320
    29 00000017 C706F60FC800            		MOV		WORD [SCRNY],200
    30 0000001D 66C706F80F00000A00      		MOV		DWORD [VRAM],0x000a0000
    31                                  
    32                                  ; キーボードのLED状態をBIOSに教えてもらう
    33                                  
    34 00000026 B402                    		MOV		AH,0x02
    35 00000028 CD16                    		INT		0x16 			; keyboard BIOS
    36 0000002A A2F10F                  		MOV		[LEDS],AL
    37                                  
    38                                  ; PICが一切の割り込みを受け付けないようにする
    39                                  ;	AT互換機の仕様では、PICの初期化をするなら、
    40                                  ;	こいつをCLI前にやっておかないと、たまにハングアップする
    41                                  ;	PICの初期化はあとでやる
    42                                  
    43 0000002D B0FF                    		MOV		AL,0xff
    44 0000002F E621                    		OUT		0x21,AL
    45 00000031 90                      		NOP						; OUT命令を連続させるとうまくいかない機種があるらしいので
    46 00000032 E6A1                    		OUT		0xa1,AL
    47                                  
    48 00000034 FA                      		CLI						; さらにCPUレベルでも割り込み禁止
    49                                  
    50 00000035 C706F40F0D00            		MOV		WORD [0x0ff4], 0x000d  	; 進み具合テスト2
    51                                  
    52                                  ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
    53                                  
    54 0000003B E8B500                  		CALL	waitkbdout
    55 0000003E B0D1                    		MOV		AL,0xd1
    56 00000040 E664                    		OUT		0x64,AL
    57 00000042 E8AE00                  		CALL	waitkbdout
    58 00000045 B0DF                    		MOV		AL,0xdf			; enable A20
    59 00000047 E660                    		OUT		0x60,AL
    60 00000049 E8A700                  		CALL	waitkbdout
    61                                  
    62                                  ; プロテクトモード移行
    63                                  
    64                                  ;		MOV		BYTE [0x0ff3], 0xf3  	; 進み具合テスト3
    65                                  
    66                                  ;[INSTRSET "i486p"]				; 486の命令まで使いたいという記述
    67                                  
    68 0000004C 0F0116[3A01]            		LGDT	[GDTR0]			; 暫定GDTを設定
    69 00000051 0F20C0                  		MOV		EAX,CR0
    70 00000054 6625FFFFFF7F            		AND		EAX,0x7fffffff	; bit31を0にする（ページング禁止のため）
    71 0000005A 6683C801                		OR		EAX,0x00000001	; bit0を1にする（プロテクトモード移行のため）
    72 0000005E 0F22C0                  		MOV		CR0,EAX
    73 00000061 EB00                    		JMP		pipelineflush
    74                                  pipelineflush:
    75 00000063 B80800                  		MOV		AX,1*8			;  読み書き可能セグメント32bit
    76 00000066 8ED8                    		MOV		DS,AX
    77 00000068 8EC0                    		MOV		ES,AX
    78 0000006A 8EE0                    		MOV		FS,AX
    79 0000006C 8EE8                    		MOV		GS,AX
    80 0000006E 8ED0                    		MOV		SS,AX
    81                                  
    82                                  ; bootpackの転送
    83                                  
    84 00000070 66BE[40010000]          		MOV		ESI,bootpack	; 転送元
    85 00000076 66BF00002800            		MOV		EDI,BOTPAK		; 転送先
    86 0000007C 66B900000200            		MOV		ECX,512*1024/4
    87 00000082 E87500                  		CALL	memcpy
    88                                  
    89                                  ; ついでにディスクデータも本来の位置へ転送
    90                                  
    91                                  ;		MOV		BYTE [0x0ff4], 0xf4  	; 進み具合テスト4
    92                                  
    93                                  ; まずはブートセクタから
    94                                  
    95 00000085 66BE007C0000            		MOV		ESI,0x7c00		; 転送元
    96 0000008B 66BF00001000            		MOV		EDI,DSKCAC		; 転送先
    97 00000091 66B980000000            		MOV		ECX,512/4
    98 00000097 E86000                  		CALL	memcpy
    99                                  
   100                                  ;		MOV		BYTE [0x0ff5], 0xf5  	; 進み具合テスト5
   101                                  
   102                                  ; 残り全部
   103                                  
   104 0000009A 66BE00820000            		MOV		ESI,DSKCAC0+512	; 転送元
   105 000000A0 66BF00021000            		MOV		EDI,DSKCAC+512	; 転送先
   106 000000A6 66B900000000            		MOV		ECX,0
   107 000000AC 8A0EF00F                		MOV		CL,BYTE [CYLS]
   108 000000B0 6669C900120000          		IMUL	ECX,512*18*2/4	; シリンダ数からバイト数/4に変換
   109 000000B7 6681E980000000          		SUB		ECX,512/4		; IPLの分だけ差し引く
   110 000000BE E83900                  		CALL	memcpy
   111                                  
   112                                  ; asmheadでしなければいけないことは全部し終わったので、
   113                                  ;	あとはbootpackに任せる
   114                                  
   115                                  ;		MOV		BYTE [0x0ff6], 0xf6  	; 進み具合テスト6
   116                                  
   117                                  ; bootpackの起動
   118                                  
   119 000000C1 66BB00002800            		MOV		EBX,BOTPAK
   120 000000C7 66678B4B10              		MOV		ECX,[EBX+16]
   121 000000CC 6683C103                		ADD		ECX,3			; ECX += 3;
   122 000000D0 66C1E902                		SHR		ECX,2			; ECX /= 4;
   123 000000D4 7410                    		JZ		skip			; 転送するべきものがない
   124 000000D6 66678B7314              		MOV		ESI,[EBX+20]	; 転送元
   125 000000DB 6601DE                  		ADD		ESI,EBX
   126 000000DE 66678B7B0C              		MOV		EDI,[EBX+12]	; 転送先
   127 000000E3 E81400                  		CALL	memcpy
   128                                  skip:
   129 000000E6 66678B630C              		MOV		ESP,[EBX+12]	; スタック初期値
   130 000000EB 66EA1B0000001000        		JMP		DWORD 2*8:0x0000001b
   131                                  
   132                                  ;		MOV		BYTE [0x0ff7], 0xf7  	; 進み具合テスト7
   133                                  
   134                                  waitkbdout:
   135 000000F3 E464                    		IN		 AL,0x64
   136 000000F5 2402                    		AND		 AL,0x02
   137 000000F7 75FA                    		JNZ		waitkbdout		; ANDの結果が0でなければwaitkbdoutへ
   138 000000F9 C3                      		RET
   139                                  
   140                                  memcpy:
   141 000000FA 66678B06                		MOV		EAX,[ESI]
   142 000000FE 6683C604                		ADD		ESI,4
   143 00000102 66678907                		MOV		[EDI],EAX
   144 00000106 6683C704                		ADD		EDI,4
   145 0000010A 6683E901                		SUB		ECX,1
   146 0000010E 75EA                    		JNZ		memcpy			; 引き算した結果が0でなければmemcpyへ
   147 00000110 C3                      		RET
   148                                  ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   149                                  
   150                                  ;		MOV		BYTE [0x0ff8], 0xf8  	; 進み具合テスト8
   151                                  
   152                                  ;		ALIGNB	16
   153 00000111 00<rept>                		ALIGNB	16, DB 0
   154                                  GDT0:
   155                                  ;		RESB	8				; ヌルセレクタ
   156 00000120 00<rept>                		TIMES 8 DB 0
   157 00000128 FFFF00000092CF00        		DW		0xffff,0x0000,0x9200,0x00cf	; 読み書き可能セグメント32bit
   158 00000130 FFFF0000289A4700        		DW		0xffff,0x0000,0x9a28,0x0047	; 実行可能セグメント32bit（bootpack用）
   159                                  
   160 00000138 0000                    		DW		0
   161                                  GDTR0:
   162 0000013A 1700                    		DW		8*3-1
   163 0000013C [20010000]              		DD		GDT0
   164                                  
   165                                  ;		ALIGNB	16
   166                                  		ALIGNB	16, DB 0
   167                                  bootpack:
